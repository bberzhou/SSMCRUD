<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--Spring的配置文件,主要是逻辑和业务相关的,这里就过滤掉controller-->

    <context:component-scan base-package="blackberry.curd" use-default-filters="false">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

<!--==============================================================================================================================-->
    <!--配置和mybatis的整合开始-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis的全局配置文件-->
        <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
        <!--指定数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--指定mybatis的mapper文件-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>

    </bean>

    <!--配置扫描器，将mybatis接口的实现加入到IOC容器当中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的DAO接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="blackberry.curd.dao"></property>
    </bean>
    <!--配置一个可以执行批量的sqlSession-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <!--这里的sqlSessionFactory就是前面配置的-->
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <!--执行批量操作的constructor-->
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!--mybatis整合完毕-->


<!--================================================================================-->
    <!--事物的控制配置 开始-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--开启基于注解事物，使用xml配置形式的事物（重要的都使用配置式）-->
    <aop:config expose-proxy="true">
        <!--切入点表达式-->
        <aop:pointcut id="txPointCut" expression="execution(* blackberry.curd.service..*(..))"></aop:pointcut>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"></aop:advisor>
    </aop:config>
    <!--事务增强，如何切入-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--所有的方法都是事务方法-->
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="login*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="new*" propagation="REQUIRED" />
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="change*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <!--以get开始的所有方法，可以看成是查询-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="exists*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>


    <!--数据源,事务控制-->
    <context:property-placeholder location="classpath:dbConfig.properties"></context:property-placeholder>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
  <!--
    Spring配置的核心主要有：数据源，事物控制，与mybatis整合,
  -->

</beans>